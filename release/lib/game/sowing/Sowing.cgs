class Sowing extends Game

    var position;

    method Sowing(List position)

        for k from 1 to position.Length do
            if not position[k].IsInfinite and position[k] >= k and position[k] > position.Length-k then
                position[k] := inf;
            end
        end
        
    end
    
    override method Options(Player player)

        options := {};
        direction := player.Sign;

        for k from 1 to position.Length do
            if not position[k].IsInfinite and (
               (direction ==  1 and position[k] <= position.Length-k and position[k+position[k]] !== 0) or
               (direction == -1 and position[k] < k and position[k-position[k]] !== 0)) then

                newPosition := position.Copy();
                for j from 1 to position[k] do
                    newPosition[k+direction*j] := newPosition[k+direction*j] + 1;
                end;
                newPosition[k] := 0;
                options.Add(Sowing(newPosition));

            end
        end;

        return options;

    end

    override property ToString.get

        return "Sowing(" + position.ToString + ")";

    end
    
end