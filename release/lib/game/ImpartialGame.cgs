/*
 * ImpartialGame.cgs
 *
 * Created by asiegel on Jul 20, 2011
 */

class ImpartialGame extends Game

    static var idescent := {};

    property NimValue.get
    
        if ImpartialGame.idescent.Contains(this) then
            error("Unable to compute nim value: the specified game is loopy.");
        end
        
        value := this.Class.Memory[this];
        
        if nil != value then
            return value;
        end

        try
        
            ImpartialGame.idescent.Add(this);
            excl := setof(g.NimValue for g in LeftOptions);
            for n from 0 do
                if not excl.Contains(n) then
                    break;
                end
            end
            
        finally
        
            ImpartialGame.idescent.Remove(this);
            
        end
        
        this.Class.Memory[this] := n;
        return n;
    
    end

    override property CanonicalForm.get
        return *NimValue;
    end

end