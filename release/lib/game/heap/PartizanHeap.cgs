/*${cgsuite.banner}*/

class PartizanHeap extends Game

    var leftRules, rightRules;
    var n;
    
    method PartizanHeap(leftRules, rightRules, Integer n)
    
        leftRules := HeapRules.MakeRules(leftRules);
        rightRules := HeapRules.MakeRules(rightRules);
    
    end
    
    override method Options(Player player)
    
        rules := if player == Player.Left then leftRules else rightRules end;
        
        return setof(SumGame(listof(PartizanHeap(leftRules, rightRules, k) for k in heaps)) for heaps in rules.HeapOptions(n));
    
    end
    
    override property ToString.get
    
        return "PartizanHeap(" + leftRules.ToString + "," + rightRules.ToString + "," + n.ToString + ")";
    
    end
    
end