/*
 * BicolourFission.cgs
 *
 * Created by MichaelAlbert on Aug 24, 2011
 */

class BicolourFission extends GridGame

 method BicolourFission(grid)
        this.GridGame(grid);
    end
    
    override method Options(Player player)

        options := {};

        us := player.Ordinal;
        
        for r from 1 to grid.RowCount do
            for c from 1 to grid.ColumnCount do
                if grid[r,c] == us then
                    
                    deltas := [[1,0],[0,1]];
                    for d in deltas do
                        if grid[r-d[1], c-d[2]] == 0 and
                        grid[r+d[1], c+d[2]] == 0 then
                            copy := grid;
                            copy[r,c] := 0;
                            copy[r+d[1], c+d[2]] := us;
                            copy[r-d[1], c-d[2]] := us;
                            options.Add(BicolourFission(copy));
                        end
                    end
                end
            end
        end
        
        return options;

    end
    
    override property CharMap.get
        return ".xo#";
    end
    
    override property Icons.get
        return
        [
            GridIcon.Blank,
            GridIcon.BlackStone,
            GridIcon.WhiteStone,
            GridIcon.BlackSquare
         ];
    end

end