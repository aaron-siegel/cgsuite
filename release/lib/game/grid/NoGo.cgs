/*${cgsuite.banner}*/

/*
 * NoGo.cgs
 *
 * NoGo is played on a grid with black and white stones. Left may play a black
 * stone on any empty square provided that all the connected groups of stones
 * of a common colour (white or black) still have at least one liberty. That is,
 * NoGo is played like Go, except that captures and suicide are both forbidden.
 *
 * Examples:
 * g := game.grid.NoGo("...|...|...");
 * g.CanonicalForm; (should be *, takes a while)
 *
 * Created by malbert on 2/08/2011
 */

class NoGo extends GridGame

    method NoGo(grid)
        this.GridGame(grid);
    end
    
    override method Options(Player player)
    
        options := {};
        empty := 0;
        us := player.Ordinal;
        them := player.Opponent.Ordinal;
    
        for r from 1 to grid.RowCount do
            for c from 1 to grid.ColumnCount do
                if grid[r,c] == empty then
                    copy := grid;
                    copy[r,c] := us;
                    moveOk := true;
                    if copy.LibertyCount(r,c,empty) > 0 then
                       for d in Direction.Orthogonal do
                            if moveOk and copy[r+d.RowShift, c+d.ColumnShift] == them then
                               moveOk := copy.LibertyCount(r+d.RowShift, c+d.ColumnShift,empty) > 0;
                            end
                       end
                        if moveOk then
                            options.Add(NoGo(copy));
                        end
                    end
                end            
            end
        end
        return options;
    end
    
    override property CanonicalForm.get

        return NoGo(grid.SymmetryInvariant(Symmetry.Reflection)).super.CanonicalForm;
        
    end

    override property CharMap.get
        return ".xo";
    end
     
    override property Icons.get
        return
        [
            GridIcon.Blank,
            GridIcon.BlackStone,
            GridIcon.WhiteStone
        ];
    end


end