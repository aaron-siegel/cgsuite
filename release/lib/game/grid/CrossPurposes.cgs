/*
 * CrossPurposes.cgs
 *
 * Cross Purposes is played on a grid with black stones, vacant cells, and blocked cells.
 * Left's move are to take a black stone, and moving vertically (in either direction) block
 * a pair of adjacent empty cells (think of the stone as representing a tower of height 2 which
 * is being toppled into the vacant spaces). Right moves correspondingly in the horizontal direction.
 *
 *
 * Examples:
 * g := game.grid.CrossPurposes("o....|.....|#.o..|.....|..#.o");
 * g.CanonicalForm;
 *
 * Created by malbert on 27/07/2011 correcting a misiniterpretation of rules in A Siegel's version
 */

class CrossPurposes extends GridGame

    method CrossPurposes(grid)
        this.GridGame(grid);
    end

    method Options(Player player)

        options := {};

        if player == Player.Left then
            ds := Direction.Vertical
        else
            ds := Direction.Horizontal
        end

        for m from 1 to grid.RowCount do
            for n from 1 to grid.ColumnCount do
                if grid[m,n] == 1 then

                    for d in ds do
                        if grid[m+  d.RowShift,n+  d.ColumnShift] == 0 and
                           grid[m+2*d.RowShift,n+2*d.ColumnShift] == 0 then
                            copy := grid;
                            copy[m,n] := 0;
                            copy[m+  d.RowShift,n+  d.ColumnShift] := 2;
                            copy[m+2*d.RowShift,n+2*d.ColumnShift] := 2;
                            options.Add(CrossPurposes(copy));
                        end
                    end

                end
            end
        end

        return options;

    end
    
    override property CharMap.get
        return ".o#";
    end
    
    override property Icons.get
        return
        [
            GridIcon.Blank,
            GridIcon.BlackStone,
            GridIcon.Grayed
        ];
    end

end
