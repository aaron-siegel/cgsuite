class Konane extends GridGame

    method Konane(grid)
        this.GridGame(grid);
    end

    override method Options(Player player)

        options := {};

        us := player.Ordinal;
        them := player.Opponent.Ordinal;

        for m from 1 to grid.RowCount do
            for n from 1 to grid.ColumnCount do
                if grid[m,n] == us then

                    for d in Direction.Orthogonal do
                        if grid[m+d.RowShift,n+d.ColumnShift] == them and
                           grid[m+2*d.RowShift,n+2*d.ColumnShift] == 0 then

                            curGrid := grid;
                            curM := m;
                            curN := n;
                            while curGrid[curM+d.RowShift,curN+d.ColumnShift] == them and
                                  curGrid[curM+2*d.RowShift,curN+2*d.ColumnShift] == 0 do

                                curGrid[curM,curN] := 0;
                                curGrid[curM+d.RowShift,curN+d.ColumnShift] := 0;
                                curGrid[curM+2*d.RowShift,curN+2*d.ColumnShift] := us;

                                options.Add(Konane(curGrid));   // Copy on write!

                                curM := curM + 2*d.RowShift;
                                curN := curN + 2*d.ColumnShift;

                            end
                        end
                    end

                end
            end
        end

        return options;

    end

    override property CharMap.get
        return ".xo";
    end
    
    override property Icons.get
        return
        [
            GridIcon.Blank,
            GridIcon.BlackStone,
            GridIcon.WhiteStone
        ];
    end

end