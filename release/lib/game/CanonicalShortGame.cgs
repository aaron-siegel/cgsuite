/*${cgsuite.banner}*/

class CanonicalShortGame extends CanonicalStopperGame : java "org.cgsuite.lang.game.CanonicalShortGame"

    override method op+(CanonicalShortGame h) : java "add";
    override method op-(CanonicalShortGame h) : java "subtract";
    override method op neg() : java "negate";
    override method Leq(CanonicalShortGame h) : java "leq";
    override method op:(CanonicalShortGame h) : java "ordinalSum";
    method Heat(CanonicalShortGame t) : java "heat";
    method Overheat(CanonicalShortGame s, CanonicalShortGame t) : java "overheat";
    method Cool(Number t) : java "cool";
    method NortonProduct(CanonicalShortGame h) : java "nortonMultiply";
    method ConwayProduct(CanonicalShortGame h) : java "conwayMultiply";
    override method OrdinalSum(CanonicalShortGame h) : java "ordinalSum";

    override property AtomicWeight.get : java "atomicWeight";
    override property Birthday.get : java "birthday";
             property Diversity.get : java "diversity";
    override property Freeze.get : java "freeze";
             property Incentives.get : java "incentives";
    override property IsAllSmall.get : java "isAllSmall";
             property IsEven.get : java "isEven";
             property IsEvenTempered.get : java "isEvenTempered";
    override property IsInfinitesimal.get : java "isInfinitesimal";
    override property IsInteger.get : java "isInteger";
    override property IsNimber.get : java "isNimber";
    override property IsNumber.get : java "isNumber";
    override property IsNumberish.get : java "isNumberish";
    override property IsNumberTiny.get : java "isNumberTiny";
    override property IsNumberUpStar.get : java "isNumberUpStar";
             property IsOdd.get : java "isOdd";
             property IsOddTempered.get : java "isOddTempered";
    override property IsUptimal.get : java "isUptimal";
             property LeftIncentives.get : java "leftIncentives";
    override property LeftOptions.get : java "getLeftOptions";
    override property LeftStop.get : java "leftStop";
    override property Mean.get : java "mean";
    override property ReducedCanonicalForm.get : java "rcf";
             property RightIncentives.get : java "rightIncentives";
    override property RightOptions.get : java "getRightOptions";
    override property RightStop.get : java "rightStop";
             property StopCount.get : java "stopCount";
    override property Temperature.get : java "temperature";
    override property Thermograph.get : java "thermograph";
    override property ToString.get : java "toString";
    override property UptimalExpansion.get : java "uptimalExpansion";
    
    property Chill.get
        return Heat(-1);
    end
    
    property Companion.get
    
        if (this-Mean).IsNimber and (Mean != 0 or Birthday >= 2) then
            return this;
        end
    
        clo := setof(g.Companion for g in LeftOptions);
        cro := setof(g.Companion for g in RightOptions);
        if this >= 0 then
            clo.Add(0);
        end
        if this <= 0 then
            cro.Add(0);
        end
        return {clo|cro};
        
    end
    
    override property Degree.get
        return 0;
    end
    
    property IsReduced.get
        return this == ReducedCanonicalForm;
    end
    
    override property Outcome.get
    
        if this == 0 then
            return OutcomeClass.P;
        elseif this >= 0 then
            return OutcomeClass.L;
        elseif this <= 0 then
            return OutcomeClass.R;
        else
            return OutcomeClass.N;
        end
    
    end

end
