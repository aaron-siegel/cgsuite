/*
 * SubsetIterator.cgs
 *
 * Created by malbert on 4/08/2011
 */

mutable class SubsetIterator extends Iterator

    var valueList;
    var values;
    var subsetSize;
    var charSeq;
     
    method SubsetIterator(Integer subsetSize, Set values ? nil, List valueList ? nil) 
        if (valueList == nil) then
            valueList := listof(x for x in values);
        end
        
        charSeq := listof(false for i from 1 to valueList.Length);
        
        if (subsetSize <= valueList.Length) then
            for i from 1 to subsetSize do
                charSeq[i] := true;
            end
        end
        
        if subsetSize > valueList.Length or subsetSize < 0 then
            charSeq := nil;
        end
        
    end
    
    override property HasNext.get
           return charSeq != nil;     
    end
    
    override property Next.get
    
        result := {};
        for i from 1 to charSeq.Length do    
            if charSeq[i] then
                result.Add(valueList[i]);
            end
        end
        
        count := 0;
        if charSeq[charSeq.Length] then
            count := count+1;
        end;
        i := charSeq.Length-1;
        while i >= 1 do
            if (charSeq[i] and not charSeq[i+1]) then
                charSeq[i] := false;
                for j from i+1 to charSeq.Length do
                    charSeq[j] := (j-i <= count+1);
                end
                break;
            elseif charSeq[i] then
                count := count+1;
            end
            i := i-1;
        end;
        
        if (i == 0) then
            charSeq := nil;
        end
            
        return result;
    end

end