##TOC##

++Entering Games++

You can type games directly into the worksheet. For example, try entering the following:

$vv*2$

This represents the game double-down + *2. In general, you can enter combinations of ups, downs, and nimbers just as you'd expect.
The symbol $\^$ is used for up, $v$ for down, and $*$ for nimbers. To enter, say, 5 times up, you could type either $\^\^\^\^\^$ or $\^5$.

More complicated games can be entered using braces and slashes.  For example:

${2||1|0,*}$

Expressions containing slashes ~must~ be enclosed in braces.  That is, to enter the game 1|0, you must type ${1|0}$.
Ambiguous expressions, such as ${1|0|-1}$, will be rejected; you'd need to enter ${1||0|-1}$ or ${1|0||-1}$ instead.

Combinatorial Game Suite recognizes a wide variety of common games and 
displays them using standard shorthand notation (such as +_2_ for 
tiny-two). Here's a few to try (make sure to enter each on a separate 
line):

${0||0|-2}
{0|v*}
{1,1+*|-1,-1+*}$

This tutorial contains many more examples of commands that you can enter 
into the worksheet. If you're interested in seeing the results, but 
you don't want to type everything in manually, you can copy-paste directly 
from this tutorial into the worksheet. Simply highlight the command 
with the mouse and drag the highlighted text onto the worksheet.

++Operations on Games++

You can enter sums and products directly.  $*$ is used for multiples.  For example:

${3|2} + {2|0}
4 * {2||1|0}$

Note that $*$ is used both for multiplication and to specify nimbers.  Observe the difference between
these two expressions:

$*2
3*2$

Here $3*2$ is equal to 6, ~not~ three-star-two.  For the latter, you'll need to type
$3 + *2$.  Similarly, $3\^2$ is equal to 9 (exponentiation), not three-double-up.

There are nine ~comparison operators~:

$&nbsp;==&nbsp; &lt;=&nbsp; &gt;=&nbsp; &lt;&nbsp; &gt;&nbsp; !=&nbsp; &lt;|&nbsp; |&gt;&nbsp; &lt;&gt; $

(Respectively: equals, less than or equal to, greater than or equal to, less than, greater than, not equal to, less than or confused with,
greater than or confused with, confused with.) For example, try entering:

$\^\^ > *
0 &lt;| \^*$

You can assign variables as follows:

$g := {2||1|0}$

This assigns the value of ${2||1|0}$ to the variable $g$, for later use in expressions
such as (say) $g + \^*$.

++Objects++

In cgsuite, ~everything~ is an object.  You can access properties of objects with the "dot operator".
For example, with $g$ as above, try typing some of the following commands (remember to type each on
a separate line):

$g.Mean
g.Temperature
g.LeftStop
g.RightOptions
g.Birthday
g.Freeze$

In addition to properties, cgsuite supports various ~method calls~ on objects:

$g.Cool(1/2)
g.Heat(1)
g.Thermograph.Plot()$

Always remember that ~everything~ is an object, including integers.  The following are all perfectly valid
cgsuite expressions.

$4.Birthday
2.Tiny
(5/4).Floor
\^\^*.AtomicWeight
\^.Pow(3)
{2||1|0}.Heat(1)
(g + {2|*}).Temperature$

You can also put several commands on the same line by separating them with semicolons, as the following example
illustrates.  Output will only be generated for the last command on the line.

$g := {2|*}; h := g + {1|0}; h.Thermograph.Plot()$

++Classes and Canonical Forms++

Every object in cgsuite belongs to a particular ~class~.  For example, $3$ is an $Integer$,
$5/4$ is a $Number$ and ${2|*}$ is a $CanonicalShortGame$.
These classes are organized into a hierarchy, so (for example) every $Integer$ is also a
$Number$, and every $Number$ is also a $CanonicalShortGame$.  An object's
class determines what properties and methods are available to it.

There are many other classes of objects in addition to the ones we've already seen.  The
$CanonicalShortGame$ class is itself a subclass of a more general class, $Game$.
Other subclasses of $Game$ are used to represent positions in specific games.  For example, there is
a class called

$examples.Clobber$

which can be used to represent Clobber positions.  Try the following:

$g := examples.Clobber("xox|ox.")$

This constructs a 2x3 Clobber position with the layout you see on the worksheet.  To get the canonical form, type

$g.CanonicalForm$

++Tips and Tricks++

A few tricks to help you use the worksheet more effectively:
<ul>
    <li>You can press the up arrow key on a blank worksheet line to repeat the previous command.  Repeatedly pressing
    the up arrow will cycle through all previous commands.

    You can also type a fragment of a command, and then press the up arrow, to jump to the most recent command
    that begins with that fragment.  For example, if you type

    $g :=$

    and then press up, cgsuite will jump to the most recent command that started with "$g :=$".
    This can be extremely handy when you need to enter a slight modification of an earlier command.  You can
    press up repeatedly to cycle through all previous commands that started with that
    fragment.
    <li>You might have noticed that every time you enter a command, it appears in the Command History window.  This
    provides a record of all previous commands (and it's saved even after you restart cgsuite).  You can double-click
    on a command in the Command History window to copy its contents directly to the worksheet.
    <li>Sometimes you might start a calculation and find that it runs for a very long time.  For example, computing
    the canonical form of a large Clobber position such as

    $examples.Clobber("xoxo|oxox|xoxo|oxox").CanonicalForm$

    takes a rather long time.  If you find it's taking longer than expected and want to abort, just click
    "Kill Calculation" in the System menu, or press Ctrl-K (Command-K on MacOS).  This instructs cgsuite
    to stop the current calculation immediately.
    <li>It can also be useful to enter multi-line commands into the worksheet.  You can do this by pressing Shift-Enter.
</ul>

++Exercises++
<ol>
    <li>Let $g$ be the game ${3||1|*}$. Calculate 
    the canonical forms of $g + g$ and $g + g + g + g$. 
    Compute the mean and temperature of $g$. How does $g$ 
    compare with $1$ and $1*$?
    <li>Use the $LeftOptions$ and $RightOptions$ 
    properties to determine the canonical form of $\^5$.
    <li>You can construct a 4x4 Domineering position by typing

    $Domineering(Grid(4,4))$

    Let $h$ be the canonical form of this position. Try comparing $h$ with 
    small positive and negative numbers. Make a conjecture as to whether 
    or not $h$ is an infinitesimal, and then use $h.IsInfinitesimal$ 
    to verify it. How does $h$ compare with various tinies?
    <li>Try to find constraints on positive numbers a, b, c (a &gt; b) such that ${a|b} + +_c_ = {a+_c_|b+_c_}$.
</ol>