/*${cgsuite.banner}*/

class GenHackenbush(childish as Boolean ? false) extends GraphRuleset

  override def Eval(graph as Graph) begin
    if (not graph.IsConnected) then
      System.Error("That `Graph` is not connected.");
    end
    Position(graph);
  end

  class Position(graph as Graph) extends GraphGame

    override def Options(player as Player) begin
      for edge in graph.Edges
      where edge.FromVertex <= edge.ToVertex and
        (edge.Tag == Color.Green
          or (player == Left and edge.Tag == Color.Blue)
          or (player == Right and edge.Tag == Color.Red)) and
        // TODO This can be made more efficient
        (not childish or edge.Tag == Color.Green or graph.DeleteEdge(edge).ConnectedComponent(1).EdgeCount == graph.EdgeCount - 1)
      yield
        Position(graph.DeleteEdge(edge).ConnectedComponent(1))
      end
    end

  end

  override def EdgeTypes := { "l" => Color.Blue, "r" => Color.Red, "e" => Color.Green };

end
