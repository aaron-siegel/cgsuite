/*${cgsuite.banner}*/

system class Graph

  external static def Parse(
    str as String,
    vertexTypes as Function ? { "" => Nothing },
    edgeTypes as Function ? { "" => Nothing }
  ) as Graph;

//  def AdjacencyList := [Outedges(vertex) for vertex from 1 to VertexCount];

  def op[](index as Integer) := Vertices[index];

  external def ConnectedComponent(vertex as Integer) as Graph;

  external def DeleteEdge(edge as Edge, symmetric as Boolean ? false) as Graph;

  external def DeleteEdgeByIndex(vertex as Integer, edge as Integer, symmetric as Boolean ? false) as Graph;

  external def DeleteVertex(vertex as Integer) as Graph;

  external def DeleteVertices(vertices as List) as Graph;

  external def EdgeCount as Integer;

  external def Edges as List;

  external def RetainVertices(vertices as List) as Graph;

  external def UpdatedVertexTags(updates as Map) as Graph;

  external def VertexCount as Integer;

  external def Vertices as List;

  external override def ToOutput as Output;

end
