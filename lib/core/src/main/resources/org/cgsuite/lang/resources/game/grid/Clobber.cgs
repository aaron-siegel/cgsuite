/*${cgsuite.banner}*/

class Clobber(grid, directions ? Coordinates.Orthogonal, anti ? false) extends GridGame

  override def Options(Player player) begin

    var us := player.Ordinal;
    var them := player.Opponent.Ordinal;

    var clobbered := if anti then 0 else them end;
    var leftBehind := if anti then them else 0 end;

    for c in grid.FindAll(us)
    for d in directions where grid[c+d] == clobbered
    yield
      Clobber(grid.Updated({c => leftBehind, c+d => us}), directions, anti)
    end

  end

  override def CharMap := ".xo";

  override def Decomposition begin
    for component in grid.Decomposition(0, directions) yield
      Clobber(component, directions, anti)
    end
  end

end
