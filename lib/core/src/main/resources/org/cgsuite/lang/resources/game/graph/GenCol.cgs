/*${cgsuite.banner}*/

class GenCol(leftPermitted as List, rightPermitted as List) extends GraphRuleset

  class Position(graph as Graph) extends GraphGame

    override def Options(player as Player) begin
      var permitted := if player == Left then leftPermitted else rightPermitted end;
      for vertex from 1 to graph.VertexCount
      where permitted Contains graph.VertexTag(vertex)
      yield
        var tagUpdates :=
          { target => player for target in graph.Outedges(vertex) where graph.VertexTag(target) == Nothing };
        var blockedVertices :=
          graph.Outedges(vertex) Filter (target -> graph.VertexTag(target) == player.Opponent);
        var deletedVertices := blockedVertices Adjoin vertex;
        Position(graph UpdateTags tagUpdates DeleteVertices deletedVertices)
      end
    end

  end

  override def Tags := { "L" => Left, "R" => Right };

end
