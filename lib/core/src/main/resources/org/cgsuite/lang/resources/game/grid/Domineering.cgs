/*${cgsuite.banner}*/

singleton class Domineering extends GridRuleset

  class Position(grid as Grid) extends GridGame

    override def Options(player as Player) begin

      var directions := if player == Left then [(1,0)] else [(0,1)] end;

      for m from 1 to grid.RowCount
      for n from 1 to grid.ColCount
      for d in directions
      where grid[(m,n)] == 0 and grid[(m,n)+d] == 0
      yield
        Position(grid.Updated({(m,n) => 1, (m,n)+d => 1}))
      end

    end

    override def Decomposition begin
      for component in grid.Decomposition(1) yield
        Position(component.SymmetryInvariant(Symmetry.Flip))
      end
    end

  end

  override def CharMap := ".#";

end
